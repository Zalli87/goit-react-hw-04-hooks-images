{"version":3,"sources":["components/ImageGallery/ImageGalleryItem.module.css","components/Modal/Modal.module.css","components/ImageGallery/ImageGallery.module.css","components/Button/Button.module.css","components/SearchForm/SearchForm.js","serveses/pixabay-api.js","components/Modal/Modal.js","components/ImageGallery/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","App.js","reportWebVitals.js","index.js","components/SearchForm/SearchForm.module.css"],"names":["module","exports","SearchForm","onSubmit","useState","imageQuery","setImageQuery","className","s","Searchbar","event","preventDefault","trim","toast","error","type","SearchFormButton","SearchFormButtonLabel","onChange","currentTarget","value","toLowerCase","SearchFormInput","autoComplete","autoFocus","placeholder","fetchImage","page","fetch","then","response","ok","json","Promise","reject","Error","pixabayAPI","propTypes","imageValue","PropTypes","string","isRequired","number","modalRoot","document","querySelector","Modal","tag","largeImageURL","onClose","handlKeyDown","code","useEffect","window","addEventListener","createPortal","Overlay","onClick","target","src","alt","ImageGalleryItem","webformatURL","showModal","setShowModal","toggleModal","state","ImageGalleryItemImage","ImageGallery","images","map","id","tags","Button","protoType","func","App","status","setStatus","setImages","setError","setPage","hits","length","catch","finally","scroll","scrollTo","top","documentElement","scrollHeight","behavior","massege","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ce1c7132.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__1VhXk\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__Tvdrh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__1fbyD\",\"Modal\":\"Modal_Modal__iCClg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__3q3Fv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2yPpw\"};","import { useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport PropTypes from 'prop-types';\r\nimport s from './SearchForm.module.css';\r\n\r\n\r\nfunction SearchForm({onSubmit}) {\r\n  \r\n  const [imageQuery, setImageQuery] = useState('');\r\n\r\n  const handlQueryChange = event => {\r\n        setImageQuery(event.currentTarget.value.toLowerCase());\r\n    };\r\n\r\n  const handlSubmit = event => {\r\n        event.preventDefault(); \r\n        if (imageQuery.trim() === '') {\r\n            toast.error('enter query');\r\n            return;\r\n        }\r\n\r\n        onSubmit(imageQuery);\r\n        setImageQuery('');\r\n    }\r\n\r\n            return (\r\n<header className={s.Searchbar}>\r\n  <form onSubmit={handlSubmit} className={s.SearchForm}>\r\n    <button type=\"submit\" className={s.SearchFormButton}>\r\n      <span className={s.SearchFormButtonLabel}>Search</span>\r\n    </button>\r\n    <input\r\n      onChange={handlQueryChange}\r\n      value={imageQuery}\r\n      className={s.SearchFormInput}\r\n      type=\"text\"\r\n      autoComplete=\"off\"\r\n      autoFocus\r\n      placeholder=\"Search images and photos\"\r\n    />\r\n  </form>\r\n</header>\r\n        )\r\n  \r\n}\r\n\r\nSearchForm.propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default SearchForm;","import PropTypes from 'prop-types';\r\n\r\nconst API_KEY = '9056490-f67ac46e342f0369ec0e655c9';\r\nconst BASE_URL = 'https://pixabay.com/api/?image_type=photo&orientation=horizontal';\r\n\r\nfunction fetchImage(imageQuery, page) {\r\n    return fetch(\r\n        `${BASE_URL}&q=${imageQuery}&page=${page}&per_page=12&key=${API_KEY}`,\r\n    ).then(response => {\r\n        if (response.ok) {\r\n            return response.json();\r\n        }\r\n        return Promise.reject(\r\n            new Error(`No images found on request ${imageQuery}`),\r\n        );\r\n    });\r\n}\r\n\r\nconst pixabayAPI = {\r\n    fetchImage,\r\n};\r\n\r\nfetchImage.propTypes = {\r\n    imageValue: PropTypes.string.isRequired,\r\n    page: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default pixabayAPI;","import React, { useEffect, useState } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Modal.module.css'\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nfunction Modal({ tag, largeImageURL, onClose }) {\r\n    \r\n    useEffect(() => {\r\n        window.addEventListener('keydown', handlKeyDown);\r\n\r\n        return () => {\r\n            window.addEventListener('keydown', handlKeyDown);\r\n        }\r\n    }); \r\n    \r\n   function handlKeyDown(event) {\r\n        if (event.code === 'Escape') {\r\n            onClose();\r\n        };\r\n    }\r\n\r\n  const handlBackdropClick = event => {\r\n        if (event.currentTarget === event.target) {\r\n             onClose();\r\n        };\r\n\r\n    }\r\n        \r\n        return createPortal(\r\n            <div className={s.Overlay} onClick={handlBackdropClick}>\r\n                <div className={s.Modal}>\r\n                    <img src={largeImageURL} alt={tag} />\r\n                </div>\r\n            </div>,\r\n            modalRoot,\r\n        );\r\n}\r\n\r\nModal.propTypes = {\r\n    tag: PropTypes.string.isRequired,\r\n    largeImageURL: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Modal;","import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ImageGalleryItem.module.css'\r\nimport Modal from '../Modal';\r\n\r\n\r\nfunction ImageGalleryItem({webformatURL, tag, largeImageURL}) {\r\n    \r\n    const [showModal, setShowModal] = useState(false);\r\n   \r\n\r\n   const toggleModal = () => {\r\n       setShowModal(state => !state);\r\n              };\r\n\r\n    return (\r\n            <>\r\n                            <li className={s.ImageGalleryItem}>\r\n                <img\r\n                        src={webformatURL}\r\n                        alt={tag}\r\n                        className={s.ImageGalleryItemImage}\r\n                        onClick={toggleModal}\r\n                    />\r\n                    {showModal && (\r\n                        <Modal\r\n                            onClose={toggleModal}\r\n                            tag={tag}\r\n                            largeImageURL={largeImageURL}\r\n                        />\r\n                    )}\r\n                </li>\r\n          </>\r\n        );\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n    webformatURL: PropTypes.string.isRequired,\r\n    tag: PropTypes.string,\r\n    largeImageURL: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n\r\n\r\n\r\n","import PropTypes from 'prop-types';\r\nimport s from './ImageGallery.module.css';\r\nimport ImageGalleryItem from './ImageGalleryItem';\r\n\r\n\r\nfunction ImageGallery({ images }) {\r\n    return (\r\n        <ul className={s.ImageGallery}>\r\n            {images.map(({ id, webformatURL, tags, largeImageURL }) => (\r\n                <ImageGalleryItem\r\n                    key={id}\r\n                    webformatURL={webformatURL}\r\n                    tag={tags}\r\n                    largeImageURL={largeImageURL}\r\n                />\r\n            ))}\r\n        </ul>\r\n    );\r\n}\r\n\r\nImageGallery.propTypes = {\r\n    images: PropTypes.arrayOf(PropTypes.object.isRequired),\r\n    };\r\n\r\nexport default ImageGallery;","import PropTypes from 'prop-types';\r\nimport s from './Button.module.css';\r\n\r\nfunction Button({ onClick }) {\r\n    return (\r\n        <button onClick={onClick} type='button' className={s.Button} >Load more</button>\r\n    )\r\n}\r\n\r\nButton.protoType = {\r\n    onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;","import { useState, useEffect } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport Loader from \"react-loader-spinner\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport './App.css';\nimport SearchForm from './components/SearchForm';\nimport pixabayAPI from './serveses/pixabay-api';\nimport ImageGallery from './components/ImageGallery';\nimport Button from './components/Button';\n\n\nfunction App() {\n  \n  const [imageQuery, setImageQuery] = useState('');\n  const [status, setStatus] = useState('idle');\n  const [images, setImages] = useState([]);\n  const [error, setError] = useState(null);\n  const [page, setPage] = useState(1);\n\n  useEffect(() => {\n    if (imageQuery === '') {\n      return\n    };\n    \n    setStatus('pending');\n\n    pixabayAPI.fetchImage(imageQuery, page)\n      .then(images => {\n        if (images.hits.length === 0) {\n          return Promise.reject(\n            new Error(\n              `No images found on request ${imageQuery}`,\n            ),\n          );\n        }\n        setImages(state => [...state, ...images.hits]);\n        setStatus('resolved');\n      })\n      .catch(error => {\n        setStatus('rejected');\n        setError(error);\n      })\n      .finally(scroll);\n  }, [imageQuery, page]);\n    \n  const updatePage = () => {\n    setPage(state => state + 1);\n  };\n\n  const scroll = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight - 1500,\n      behavior: 'smooth',\n    });\n  };\n\n        \n  const handlFormSubmit = imageQuery => {\n    setImageQuery(imageQuery);\n  }\n\n  \n  \n  return (\n    <div>\n      <SearchForm onSubmit={handlFormSubmit} />\n      <ToastContainer />\n      {status === 'idle' && (\n        <p>What you want fuond?</p>\n      )}\n      {status === 'pending' && <Loader />}\n      {status === 'resolved' &&\n        (\n          <>\n            <ImageGallery images={images} />\n            <Button onClick={updatePage} />\n          </>\n        )\n      }\n\n      {status === 'rejected' && (\n < p > { error.massege }</p>\n      )\n        }\n    </div>\n    );\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"SearchForm_Searchbar__2dQFG\",\"SearchForm\":\"SearchForm_SearchForm__2SnGH\",\"SearchFormButton\":\"SearchForm_SearchFormButton__1HWjP\",\"SearchFormButtonLabel\":\"SearchForm_SearchFormButtonLabel__ZErXH\",\"SearchFormInput\":\"SearchForm_SearchFormInput__3RCC5\"};"],"sourceRoot":""}