{"version":3,"sources":["components/ImageGallery/ImageGalleryItem.module.css","components/Modal/Modal.module.css","components/ImageGallery/ImageGallery.module.css","components/Button/Button.module.css","components/SearchForm/SearchForm.js","serveses/pixabay-api.js","components/Modal/Modal.js","components/ImageGallery/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","App.js","reportWebVitals.js","index.js","components/SearchForm/SearchForm.module.css"],"names":["module","exports","SearchForm","onSubmit","useState","imageQuery","setImageQuery","className","s","Searchbar","event","preventDefault","trim","toast","error","type","SearchFormButton","SearchFormButtonLabel","onChange","currentTarget","value","toLowerCase","SearchFormInput","autoComplete","autoFocus","placeholder","fetchImage","page","fetch","then","response","ok","json","Promise","reject","Error","pixabayAPI","propTypes","imageValue","PropTypes","string","isRequired","number","modalRoot","document","querySelector","Modal","tag","largeImageURL","onClose","handlKeyDown","code","useEffect","window","addEventListener","createPortal","Overlay","onClick","target","src","alt","ImageGalleryItem","webformatURL","showModal","setShowModal","toggleModal","state","ImageGalleryItemImage","ImageGallery","images","map","id","tags","Button","protoType","func","App","status","setStatus","setImages","setError","setPage","hits","length","catch","finally","scroll","scrollTo","top","documentElement","scrollHeight","behavior","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b28ceb9b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__1VhXk\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__Tvdrh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__1fbyD\",\"Modal\":\"Modal_Modal__iCClg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__3q3Fv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2yPpw\"};","import { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport PropTypes from 'prop-types';\nimport s from './SearchForm.module.css';\n\nfunction SearchForm({ onSubmit }) {\n    const [imageQuery, setImageQuery] = useState('');\n\n    const handlQueryChange = event => {\n        setImageQuery(event.currentTarget.value.toLowerCase());\n    };\n\n    const handlSubmit = event => {\n        event.preventDefault();\n        if (imageQuery.trim() === '') {\n            toast.error('enter query');\n            return;\n        }\n\n        onSubmit(imageQuery);\n        setImageQuery('');\n    };\n\n    return (\n        <header className={s.Searchbar}>\n            <form onSubmit={handlSubmit} className={s.SearchForm}>\n                <button type=\"submit\" className={s.SearchFormButton}>\n                    <span className={s.SearchFormButtonLabel}>Search</span>\n                </button>\n                <input\n                    onChange={handlQueryChange}\n                    value={imageQuery}\n                    className={s.SearchFormInput}\n                    type=\"text\"\n                    autoComplete=\"off\"\n                    autoFocus\n                    placeholder=\"Search images and photos\"\n                />\n            </form>\n        </header>\n    );\n}\n\nSearchForm.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n};\n\nexport default SearchForm;\n","import PropTypes from 'prop-types';\n\nconst API_KEY = '9056490-f67ac46e342f0369ec0e655c9';\nconst BASE_URL =\n    'https://pixabay.com/api/?image_type=photo&orientation=horizontal';\n\nfunction fetchImage(imageQuery, page) {\n    return fetch(\n        `${BASE_URL}&q=${imageQuery}&page=${page}&per_page=12&key=${API_KEY}`,\n    ).then(response => {\n        if (response.ok) {\n            return response.json();\n        }\n        return Promise.reject(\n            new Error(`No images found on request ${imageQuery}`),\n        );\n    });\n}\n\nconst pixabayAPI = {\n    fetchImage,\n};\n\nfetchImage.propTypes = {\n    imageValue: PropTypes.string.isRequired,\n    page: PropTypes.number.isRequired,\n};\n\nexport default pixabayAPI;\n","import React, { useEffect, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport s from './Modal.module.css';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nfunction Modal({ tag, largeImageURL, onClose }) {\n    useEffect(() => {\n        window.addEventListener('keydown', handlKeyDown);\n\n        return () => {\n            window.addEventListener('keydown', handlKeyDown);\n        };\n    });\n\n    function handlKeyDown(event) {\n        if (event.code === 'Escape') {\n            onClose();\n        }\n    }\n\n    const handlBackdropClick = event => {\n        if (event.currentTarget === event.target) {\n            onClose();\n        }\n    };\n\n    return createPortal(\n        <div className={s.Overlay} onClick={handlBackdropClick}>\n            <div className={s.Modal}>\n                <img src={largeImageURL} alt={tag} />\n            </div>\n        </div>,\n        modalRoot,\n    );\n}\n\nModal.propTypes = {\n    tag: PropTypes.string.isRequired,\n    largeImageURL: PropTypes.string.isRequired,\n};\n\nexport default Modal;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ImageGalleryItem.module.css';\nimport Modal from '../Modal';\n\nfunction ImageGalleryItem({ webformatURL, tag, largeImageURL }) {\n    const [showModal, setShowModal] = useState(false);\n\n    const toggleModal = () => {\n        setShowModal(state => !state);\n    };\n\n    return (\n        <>\n            <li className={s.ImageGalleryItem}>\n                <img\n                    src={webformatURL}\n                    alt={tag}\n                    className={s.ImageGalleryItemImage}\n                    onClick={toggleModal}\n                />\n                {showModal && (\n                    <Modal\n                        onClose={toggleModal}\n                        tag={tag}\n                        largeImageURL={largeImageURL}\n                    />\n                )}\n            </li>\n        </>\n    );\n}\n\nImageGalleryItem.propTypes = {\n    webformatURL: PropTypes.string.isRequired,\n    tag: PropTypes.string,\n    largeImageURL: PropTypes.string.isRequired,\n};\n\nexport default ImageGalleryItem;\n","import PropTypes from 'prop-types';\nimport s from './ImageGallery.module.css';\nimport ImageGalleryItem from './ImageGalleryItem';\n\nfunction ImageGallery({ images }) {\n    return (\n        <ul className={s.ImageGallery}>\n            {images.map(({ id, webformatURL, tags, largeImageURL }) => (\n                <ImageGalleryItem\n                    key={id}\n                    webformatURL={webformatURL}\n                    tag={tags}\n                    largeImageURL={largeImageURL}\n                />\n            ))}\n        </ul>\n    );\n}\n\nImageGallery.propTypes = {\n    images: PropTypes.arrayOf(PropTypes.object.isRequired),\n};\n\nexport default ImageGallery;\n","import PropTypes from 'prop-types';\nimport s from './Button.module.css';\n\nfunction Button({ onClick }) {\n    return (\n        <button onClick={onClick} type=\"button\" className={s.Button}>\n            Load more\n        </button>\n    );\n}\n\nButton.protoType = {\n    onClick: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import { useState, useEffect } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport Loader from 'react-loader-spinner';\nimport 'react-toastify/dist/ReactToastify.css';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport './App.css';\nimport SearchForm from './components/SearchForm';\nimport pixabayAPI from './serveses/pixabay-api';\nimport ImageGallery from './components/ImageGallery';\nimport Button from './components/Button';\n\nfunction App() {\n    const [imageQuery, setImageQuery] = useState('');\n    const [status, setStatus] = useState('idle');\n    const [images, setImages] = useState([]);\n    const [error, setError] = useState(null);\n    const [page, setPage] = useState(1);\n\n    useEffect(() => {\n        if (imageQuery === '') {\n            return;\n        }\n\n        setStatus('pending');\n\n        pixabayAPI\n            .fetchImage(imageQuery, page)\n            .then(images => {\n              if (images.hits.length === 0) {\n                  setStatus('idle')\n                  return toast.error(`No images found on request ${imageQuery}`);\n                                 }\n                setImages(state => [...state, ...images.hits]);\n                setStatus('resolved');\n            })\n            .catch(error => {\n                setStatus('rejected');\n                setError(error);\n            })\n            .finally(scroll);\n    }, [imageQuery, page]);\n\n    const updatePage = () => {\n        setPage(state => state + 1);\n    };\n\n    const scroll = () => {\n        window.scrollTo({\n            top: document.documentElement.scrollHeight - 1500,\n            behavior: 'smooth',\n        });\n    };\n\n    const handlFormSubmit = imageQuery => {\n        setImageQuery(imageQuery);\n    };\n\n    return (\n        <div>\n            <SearchForm onSubmit={handlFormSubmit} />\n            <ToastContainer />\n            {status === 'idle' && <p>What you want fuond?</p>}\n            {status === 'pending' && <Loader />}\n            {status === 'resolved' && (\n                <>\n                    <ImageGallery images={images} />\n                    <Button onClick={updatePage} />\n                </>\n            )}\n\n            {status === 'rejected' && <p>{toast.error}</p>}\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(\n            ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n                getCLS(onPerfEntry);\n                getFID(onPerfEntry);\n                getFCP(onPerfEntry);\n                getLCP(onPerfEntry);\n                getTTFB(onPerfEntry);\n            },\n        );\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"SearchForm_Searchbar__2dQFG\",\"SearchForm\":\"SearchForm_SearchForm__2SnGH\",\"SearchFormButton\":\"SearchForm_SearchFormButton__1HWjP\",\"SearchFormButtonLabel\":\"SearchForm_SearchFormButtonLabel__ZErXH\",\"SearchFormInput\":\"SearchForm_SearchFormInput__3RCC5\"};"],"sourceRoot":""}